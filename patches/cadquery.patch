diff --git a/cadquery/occ_impl/shapes.py b/cadquery/occ_impl/shapes.py
index cedc480..dfa75bd 100644
--- a/cadquery/occ_impl/shapes.py
+++ b/cadquery/occ_impl/shapes.py
@@ -596,7 +596,7 @@ class Shape(object):
         Returns a hashed value denoting this shape. It is computed from the
         TShape and the Location. The Orientation is not used.
         """
-        return self.wrapped.HashCode(HASH_CODE_MAX)
+        return hash(self.wrapped)
 
     def isNull(self) -> bool:
         """
diff --git a/setup.py b/setup.py
index 9ad7b6b..bd15298 100644
--- a/setup.py
+++ b/setup.py
@@ -24,9 +24,9 @@ is_azure = "CONDA_PY" in os.environ
 is_conda = "CONDA_PREFIX" in os.environ
 
 # Only include the installation dependencies if we are not running on RTD or AppVeyor or in a conda env
-if not is_rtd and not is_appveyor and not is_azure and not is_conda:
+if not is_rtd and not is_appveyor and not is_azure:
     reqs = [
-        "cadquery-ocp>=7.7.0,<7.8",
+        "cadquery-ocp>=7.8.0,<7.9",
         "ezdxf",
         "multimethod>=1.11,<2.0",
         "nlopt>=2.9.0,<3.0",
diff --git a/tests/test_assembly.py b/tests/test_assembly.py
index bae54ab..1093ffb 100644
--- a/tests/test_assembly.py
+++ b/tests/test_assembly.py
@@ -702,20 +702,17 @@ def test_save(extension, args, nested_assy, nested_assy_sphere):
         ("stl", ("STL",), {}),
     ],
 )
-def test_export(extension, args, kwargs, tmpdir, nested_assy):
+def test_export(extension, args, kwargs, nested_assy):
 
     filename = "nested." + extension
-
-    with tmpdir:
-        nested_assy.export(filename, *args, **kwargs)
-        assert os.path.exists(filename)
+    nested_assy.export(filename, *args, **kwargs)
+    assert os.path.exists(filename)
 
 
-def test_export_vtkjs(tmpdir, nested_assy):
+def test_export_vtkjs(nested_assy):
 
-    with tmpdir:
-        nested_assy.export("nested.vtkjs")
-        assert os.path.exists("nested.vtkjs.zip")
+    nested_assy.export("nested.vtkjs")
+    assert os.path.exists("nested.vtkjs.zip")
 
 
 def test_export_errors(nested_assy):
