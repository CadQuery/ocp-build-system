name: Build VTK from source

on:
  workflow_dispatch

env:
  PYTHONUTF8: 1

jobs:
  build:
    name: Build with wrapper for Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'macos-13', 'macos-14' ]
        python-version: [ '3.11' ]

    steps:

      - uses: actions/checkout@v4

      - name: Checkout project
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Ubuntu Deps
        shell: bash -l {0}
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt install -y build-essential cmake mesa-common-dev mesa-utils freeglut3-dev python3-dev python3-venv git-core ninja-build cmake wget libglvnd0 libglvnd-dev
          fi

      - name: MacOS Deps
        shell: bash -l {0}
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew install ninja
          fi

      - name: Setup Python Env
        shell: bash -l {0}
        # The `bdist_wheel` command requires the `wheel` package
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip freeze build

      - name: Cache build folder
        id: cache-cpp
        uses: actions/cache@v3
        with:
          path: ./vtk/build
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-cpp-build-${{ hashFiles('**/CMakeLists.txt', '**/*.cpp', '**/*.h') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-cpp-build-

      - name: Compile from Scratch
        if: steps.cache-cpp.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          mkdir -p ./vtk/build
          wget https://www.vtk.org/files/release/9.2/VTK-9.2.6.tar.gz  # Update this for newer releases of VTK
          tar -zxf VTK-9.2.6.tar.gz --directory ./vtk/
          echo "Building VTK"
          cd ./vtk/build
          cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_APPLE_SILICON_PROCESSOR="arm64" -DCMAKE_C_FLAGS="-Wno-error=incompatible-function-pointer-types" -DCMAKE_BUILD_TYPE=Release -DVTK_VERSION_SUFFIX="" -DVTK_DIST_NAME_SUFFIX="cadquery" ../VTK-9.2.6
          ninja -j3

      - name: Build wheel
        shell: bash -l {0}
        run: |
          python3 -m build -n -w
          cd ../../
          find ./ -iname *.whl

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cadquery-vtk-${{ matrix.os }}-cp${{ matrix.python-version }}
          path: vtk/build/dist/*.whl
