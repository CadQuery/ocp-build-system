name: Create Python wheel using Conda

on:
  workflow_dispatch
  # push:
  #   branches: [ master ]

env:
  PYTHONUTF8: 1

jobs:
  build:
    name: Build for python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'ubuntu-20.04', 'macos-latest', 'windows-latest' ]
        python-version: [ '3.8', '3.9', '3.10' ]

    steps:

      - name: Checkout project
        uses: actions/checkout@v2

      # See https://cibuildwheel.readthedocs.io/en/stable/
      # Not usable for now, because cadquery libraries require glibc 2.31,
      # but the manylinux images have been created only up to 2.24 (as of 2022-04-11).
      # - name: Build wheels
      #   uses: pypa/cibuildwheel@v2.4.0
      #   with:
      #     output-dir: dist

      # see https://github.com/marketplace/actions/setup-miniconda
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          #miniforge-version: latest
          miniconda-version: latest
          activate-environment: cadquery-ocp
          python-version: ${{ matrix.python-version }}
          channels: cadquery, conda-forge, defaults

      - name: Ubuntu Deps Setup
        shell: bash -l {0}
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt install -y libegl1 libegl1-mesa-dev
          fi

      - name: Conda Deps Setup
        shell: bash -l {0}
        run: |
          conda install -n cadquery-ocp -y ocp=7.6.* vtk=9.1.0

      - name: Pip Deps Setup
        shell: bash -l {0}
        run: |
          pip install --upgrade pip
          pip install build setuptools wheel requests auditwheel delocate delvewheel

      # - name: Manylinux Build 1
      #   shell: bash -l {0}
      #   if: ${{ matrix.os == 'ubuntu-20.04' && matrix.python-version != '3.10' }}
      #   run: |
      #     export VTK_MANYLINUX=/tmp/vtk-manylinux
      #     pip install -t $VTK_MANYLINUX --no-deps vtk~=9.1.0
      #     python -m build --no-isolation --wheel

      # vtk 9.1 py3.10 manylinux wheel not available on PyPI.
      # Use pyvista build: https://gitlab.kitware.com/vtk/vtk/-/issues/18335
      - name: Manylinux Build 2
        shell: bash -l {0}
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          export VTK_MANYLINUX=/tmp/vtk-manylinux
          pip install -t $VTK_MANYLINUX --no-deps https://github.com/pyvista/pyvista-wheels/raw/main/vtk-9.1.0.dev0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          python -m build --no-isolation --wheel

      - name: Conda-only Build
        shell: bash -l {0}
        if: ${{ matrix.os != 'ubuntu-20.04' }}
        run: |
          python -m build --no-isolation --wheel

      - name: Print info
        shell: bash -l {0}
        run: |
          conda info
          conda list --explicit
          echo '${{ github.event_name }} ${{ github.ref }}'

      - name: Test wheel
        shell: bash -l {0}
        run: |
          conda deactivate
          conda create --yes -n cadquerytest python=${{ matrix.python-version }}
          conda activate cadquerytest
          pip install dist/*.whl
          python -c "import OCP;print('OCP imported successfully')"

      # see https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cadquery-ocp-${{ matrix.os }}-cp${{ matrix.python-version }}
          path: dist/*.whl
